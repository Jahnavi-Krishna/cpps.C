#include<stdio.h>
Why is # used?
#include is used to develop large programs
Preprocessor directives begin with # and only whitespace characters 
and comments may appear before a preprocessor directive on a line.
pg 523

The # operator causes a
replacement text token to be converted to a string surrounded by quotes.

macro definition:
#define HELLO(x) puts( "Hello, " #x );
When HELLO(John) appears in a program file, it’s expanded to
puts( "Hello, " "John" );
The string "John" replaces #x in the replacement text. Strings separated by white space are
concatenated during preprocessing, so the preceding statement is equivalent to
puts( "Hello, John" );
The # operator must be used in a macro with arguments because the operand of # refers
to an argument of the macro.
The ## operator concatenates two tokens. Consider the following macro definition:
#define TOKENCONCAT(x, y)
x ## y
When TOKENCONCAT appears in the program, its arguments are concatenated and used to
replace the macro
___

pg42
#include
Preprocessor Directive
Line 3
#include <stdio.h>
is a directive to the C preprocessor. Lines beginning with # are processed by the prepro-
cessor before compilation. Line 3 tells the preprocessor to include the contents of the stan-
dard input/output header ( <stdio.h> ) in the program. This header contains information
used by the compiler when compiling calls to standard input/output library functions such
as printf (line 8). We explain the contents of headers in more detail in Chapter 5.

Blank Lines and White Space
Line 4 is simply a blank line. You use blank lines, space characters and tab characters (i.e.,
“tabs”) to make programs easier to read. Together, these characters are known as white
space. White-space characters are normally ignored by the compiler.
