(1)Formal Parameter or Formal argument
 pg 568
 The formal type parameters are place-
holders for fundamental types or user-defined types. These placeholders are used to specify
the types of the function’s parameters (line 5), to specify the function’s return type and to
declare variables within the body of the function definition (line 7). A function template
is defined like any other function, but uses the formal type parameters as placeholders for
actual data types.
   Formal parameters are the arguments declared within a function.

 (2)Actual Parameter
 
 
 (3)Pass by Value
   When arguments are passed by value, a copy of the argument’s value
is made and passed to the called function. Changes to the copy do not affect an original
variable’s value in the caller.Pass-by-value should be used whenever the called function does not need to modify
the value of the caller’s original variable.
pg173
 (4)Pass by Reference
   When an argument is passed by reference, the caller allows the
called function to modify the original variable’s value.
pg173
 
 #include<stdio.h>
void input(int*a,int*b)
{
        printf("Enter a\n");
        scanf("%d",a);
        printf("Enter b\n");
        scanf("%d",b);
}
int add(int a,int b)
{
        int c;
        c=a+b;
        return c;
}
 void output(int a,int b,int c)
{
        printf("%d + %d = %d",a,b,c);
}

int main()
{
        int x,y,z;
        input(&x,&y);
        z=add(x,y);
        output(x,y,z);
}

(5)
2.c: In function ‘main’:
2.c:25:13: error: ‘x’ redeclared as different kind of symbol
         int x=input();
             ^
2.c:23:14: note: previous definition of ‘x’ was here
 int main(int x,int y,int z)
              ^
2.c:26:13: error: ‘y’ redeclared as different kind of symbol
         int y=input();
             ^
2.c:23:20: note: previous definition of ‘y’ was here
 int main(int x,int y,int z)
                    ^
2.c:27:13: error: ‘z’ redeclared as different kind of symbol
         int z=add(int x,int y);
             ^
2.c:23:26: note: previous definition of ‘z’ was here
 int main(int x,int y,int z)
                          ^
2.c:27:19: error: expected expression before ‘int’
         int z=add(int x,int y);
                   ^
2.c:27:15: error: too few arguments to function ‘add’
         int z=add(int x,int y);
               ^
2.c:12:5: note: declared here
 int add(int a,int b)
 ERRORS :
(i)wrote int *a, instead of int*a
(ii)input(&x,&y);
(iii)z=add(x,y);


(6)Local variable
(7)GLobal variable
