(1)Formal Parameter or Formal argument
 pg 568
 The formal type parameters are place-
holders for fundamental types or user-defined types. These placeholders are used to specify
the types of the function’s parameters (line 5), to specify the function’s return type and to
declare variables within the body of the function definition (line 7). A function template
is defined like any other function, but uses the formal type parameters as placeholders for
actual data types.

Formal parameters are the arguments declared within a function.

 (2)Actual Parameter
 
 
 (3)Pass by Value
 (4)Pass by Reference
 
 #include<stdio.h>
void input(int*a,int*b)
{
        printf("Enter a\n");
        scanf("%d",a);
        printf("Enter b\n");
        scanf("%d",b);
}
int add(int a,int b)
{
        int c;
        c=a+b;
        return c;
}
 void output(int a,int b,int c)
{
        printf("%d + %d = %d",a,b,c);
}

int main()
{
        int x,y,z;
        input(&x,&y);
        z=add(x,y);
        output(x,y,z);
}

